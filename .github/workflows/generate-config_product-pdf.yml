name: Generate PRODUCTS PIR Document

on:
  workflow_dispatch:
    inputs:
        file: 
          type: string
          description:  'path to the deploy guide file underneath src/ folder(e.g configs_product.md)'
        product_version:
          type: string
          description:  'Product/Service version (e.g 2023.3.3)'
        deployed_by:
          type: string
          description:  'who deployed (e.g. ctemouatchonke)'
        environment:
          type: string
          description:  'environment (e.g. validation)'
        commit:
          type: string
          description:  'commit hash (e.g. 1234567890)' 
        git_tag:
          type: string
          description:  'git tag (e.g. 2023.3.4.rc1)'  
        product_name:
          type: string
          description:  'name of product (e.g. PDK Config)'  
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build_and_upload.outputs.value }}
    container:
        image: pandoc/latex:latest

    env:
        INPUT_FILE:       ${{ github.event.inputs.file || 'configs_product.md'}}
        DEPLOYED_BY:      ${{ github.event.inputs.deployed_by || 'ctemouatchonke'}}
        ENVIRONMENT:      ${{ github.event.inputs.environment || 'validation'}}
        PRODUCT_VERSION:  ${{ github.event.inputs.product_version || '2023.3.3'}}                   
        COMMIT:           ${{ github.event.inputs.commit || '8f4a899684a2229d7aaa0ec5dac46a5aead8804d'}}    
        GIT_TAG:           ${{ github.event.inputs.git_tag || '2023.3.4.rc1'}}        
        PRODUCT_NAME:           ${{ github.event.inputs.product_name || 'pdk config product'}} 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Generate PDF
        run: |
          DATE=$(date "+%d-%m-%Y %I:%M:%S %p")
          sed -i "s/ ##DATE/${DATE}/g" src/${{ env.INPUT_FILE }}
          sed -i 's/ ##ENVIRONMENT/${{env.ENVIRONMENT}}/g' src/${{ env.INPUT_FILE }}
          sed -i 's/ ##DEPLOYED_BY/${{env.DEPLOYED_BY}}/g' src/${{ env.INPUT_FILE }}
          sed -i 's/ ##PRODUCT_VERSION/${{env.PRODUCT_VERSION}}/g' src/${{ env.INPUT_FILE }}
          sed -i 's/ ##COMMIT_HASH/${{env.COMMIT}}/g' src/${{ env.INPUT_FILE }}
          sed -i 's/ ##GIT_TAG/${{env.GIT_TAG}}/g' src/${{ env.INPUT_FILE }}
          sed -i 's/ ##PRODUCT_NAME/${{env.PRODUCT_NAME}}/g' src/${{ env.INPUT_FILE }}
          pandoc -o  pir_PDK_Testing.pdf src/${{ env.INPUT_FILE }} -V geometry:margin=0.15in

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v2
        with:
          name: PDF
          path: pir_PDK_Testing.pdf  # Change this if you customized the output file name

  generate_pir:
    runs-on: ubuntu-latest
    # if: ${{ github.event.inputs.dry_run != true }}
    container:
      image: pandoc/latex:latest

    needs: [build]
    strategy:
        matrix: ${{ fromJson(needs.build.outputs.matrix) }}
    steps:
      - name: Generate PIR for Lambda
        run:
          echo "Generating PIR for Lambda"
          echo "${{ matrix.name }}""

      - name: Generate PIR for Product
        run:
          echo "Generating PIR for configs"

      
