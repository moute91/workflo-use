name: Store Job Logs as Artifact

on:
  workflow_dispatch:
    inputs:
        product_name:
            type: string
            description:  'Product Name(Cpp_configuration)'
        deployment_status:
          type: string
          description:  'Deployment status (passed)'
        deployed_by:
          type: string
          description:  'who deployed (e.g. ctemouatchonke)'
        environment:
          type: string
          description:  'environment (e.g. validation)'
        commit:
          type: string
          description:  'commit hash (e.g. 1234567890)'
        product_url: 
          type: string
          description: 'product url (eg. "N/A(AWS LAMBDA does not have an URL because is a serverless service)'
  


jobs:
  store_logs:
    runs-on: ubuntu-latest

    container:
        image: pandoc/latex:latest

    env:
        INPUT_FILE:        ${{ github.event.inputs.product_name || '2023.3.3.md'}}
        DEPLOYED_BY:       ${{ github.event.inputs.deployed_by || 'ctemouatchonke'}}
        ENVIRONMENT:       ${{ github.event.inputs.environment || 'validation'}}
        DEPLOYMENT_STATUS: ${{ github.event.inputs.deployment_status || 'passed'}}                   
        COMMIT:            ${{ github.event.inputs.commit || '8f4a899684a2229d7aaa0ec5dac46a5aead8804d'}}
        PRODUCT_URL:        ${{ github.event.inputs.product_url || 'N/A'}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Run your build/test/deployment steps here
      # For demonstration purposes, we'll create a dummy log file
      - name: Generate logs
        run: cp -rf src/text.md mylog.md

      - name: Convert Logs to PDF
        run: |
          DATE=$(date "+%d-%m-%Y %I:%M:%S %p")
          sed -i "s/ ##DATE/${DATE}/g" mylog.md
          sed -i 's/ ##ENVIRONMENT/${{env.ENVIRONMENT}}/g' mylog.md
          sed -i 's/ ##DEPLOYED_BY/${{env.DEPLOYED_BY}}/g' mylog.md
          sed -i 's/ ##PRODUCT_URL/${{env.PRODUCT_VERSION}}/g' mylog.md
          sed -i 's/ ##COMMIT_HASH/${{env.COMMIT}}/g' mylog.md
          # Assuming your logs are in markdown format
          pandoc -o Cpp-configs_logs.pdf mylog.md -V geometry:margin=0.15in

      # Store the log file as an artifact
      - name: Store PDF as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: converted_logs
          path: Cpp-configs_logs.pdf
